pipeline {
    agent any

    tools {
        jdk 'jdk21'
        maven 'maven3'
    }
	
	 environment {
        DOCKERHUB_CREDENTIALS = credentials('c172a84a-b3d2-4860-9a4d-a1fcb689d3a9') // Jenkins credentials ID
        DOCKER_IMAGE = "amar00369/spring-app"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/shadow-phantom-sys/BigB.git'
            }
        }

        stage('Build') {
    steps {
        dir('BB') {   // ðŸ‘ˆ cd into BB first
            sh './mvnw clean install'
        }
    }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package -DskipTests'
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }

        stage('Deploy') {
            steps {
                echo 'Deployment step (can be Docker, Kubernetes, or server copy)'
            }
        }
        stage('Docker Build & Push') {
    steps {
        script {
            docker.withRegistry('https://index.docker.io/v1/', 'c172a84a-b3d2-4860-9a4d-a1fcb689d3a9') {
                sh """
                    docker build -t Amar00369/spring-app:latest .
                    docker push Amar00369/spring-app:latest
                """
            }
        }
    }
}

    post {
        success {
            echo 'Build and Tests passed successfully!'
        }
        failure {
            echo 'Build Failed. Check logs.'
        }
    }
}