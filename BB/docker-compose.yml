
services:
  mysql:
    image: mysql:8.0
    container_name: retail-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: retaildb
      MYSQL_USER: retailuser
      MYSQL_PASSWORD: retailpass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - retail-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  retail-app:
    build: .
    container_name: retail-application
    environment:
      # Tell Spring Boot how to reach the DB inside the network:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/retaildbs?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: retailuser
      SPRING_DATASOURCE_PASSWORD: retailpass

      # optional â€” keep your existing profile variable
      SPRING_PROFILES_ACTIVE: docker

      # if your app uses custom env names, you can keep them too:
      DB_USERNAME: retailuser
      DB_PASSWORD: retailpass

    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - retail-network
    volumes:
      - app_logs:/var/log
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: on-failure

volumes:
  mysql_data:
  app_logs:

networks:
  retail-network:
    driver: bridge
